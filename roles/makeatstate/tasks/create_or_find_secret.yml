---

- name: Calculate checksum.
  stat:
    path: "{{ file }}"
    checksum_algorithm: sha256
  when: file is defined
  delegate_to: localhost
  register: file_stat

- name: "Create {{ type }} from file."
  block:
  - name: Calculate name.
    set_fact:
      new:
        "{{ (stack_name + '_' + name + '_' + type + '-'
              + file_stat.stat.checksum)
            | regex_replace('(.{,64}).*', '\\1') }}"

  - name: Calculate.
    set_fact:
      "{{ var_prefix }}_{{ name }}_{{ type }}_name": "{{ new }}"

  - name: "Create {{ type }}."
    docker_secret:
      name: "{{ new }}"
      state: present
      data: "{{ (lookup('file', file) + '\n') | b64encode }}"
      data_is_b64: true
      labels:
        com.docker.stack.namespace: "{{ stack_name }}"
    become: true
  when: file is defined and file_stat.stat.exists

- name: "Load {{ type }} from target."
  block:
  - name: Get name.
    docker_config_get_name:
      stack: "{{ source_stack_name | default(stack_name, true) }}"
      service: "{{ service_name }}"
      path: "{{ path }}"
    become: true
    register: r

  - name: Calculate name.
    set_fact:
      "{{ var_prefix }}_{{ name }}_{{ type }}_name": "{{ r.name }}"
  when: not (file is defined and file_stat.stat.exists)
